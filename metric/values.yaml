prometheus:
  server:
    baseURL: "http://localhost:80/prometheus"
    extraArgs:
      web.route-prefix: "/"
    podLabels: 
      app: prometheus-server
  extraScrapeConfigs: |
    - job_name: 'dcgm_exporter'
      static_configs:
        - targets: ['nvidia-dcgm-exporter.gmp-public:9400']
    - job_name: 'knative-serving'
      scrape_interval: 3s
      kubernetes_sd_configs: 
      - role: pod
      relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_role, __meta_kubernetes_pod_container_port_name]
        regex: knative-serving;(controller|activator|autoscaler|webhook);metrics
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
    - job_name: queue-proxy
      scrape_interval: 3s
      kubernetes_sd_configs: 
      - role: pod
      relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_pod_label_serving_knative_dev_revision, __meta_kubernetes_pod_container_port_name]
        regex: (.*);http-usermetric
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
    - job_name: 'tgi'
      scrape_interval: 3s
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_component, __meta_kubernetes_pod_container_port_name]
        regex: (.*);predictor;user-port
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
grafana:
  podLabels:
    app: grafana
  persistence:
    enabled: true
  grafana.ini:
    server:
      root_url: 'http://localhost:3000/grafana/'
      serve_from_sub_path: true
    auth:
      anonymous:
        enabled: true
    security:
      allow_embedding: true
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://metric-prometheus-server.istio-system.svc.cluster.local
        access: proxy
        isDefault: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'knative-http-requests'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/knative-http-requests
      - name: 'knative-cpu-memory-usage'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/knative-cpu-memory-usage
      - name: 'knative-gpu-memory-usage'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/knative-gpu-memory-usage
      - name: 'dcgm'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/dcgm
  dashboards:
    default:
      knative-http-requests: 
        file: ./dashboards/revision-http-requests.json
      knative-cpu-memory-usage:
        file: ./dashboards/revision-cpu-memory-usage.json
      knative-gpu-memory-usage:
        file: ./dashboards/revision-gpu-memory-usage.json
      dcgm:
        file: ./dashboards/NVIDIA DCGM Exporter.json