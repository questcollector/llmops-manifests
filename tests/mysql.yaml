apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
stringData:
  MYSQL_HOST: YOUR_RDS_ENDPOINT
  MYSQL_TCP_PORT: "YOUR_RDS_PORT"
  MYSQL_USER: admin
  MYSQL_PWD: "YOUR_RDS_PASSWORD"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-script
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS keycloak;
    CREATE USER IF NOT EXISTS 'keycloak'@'%' IDENTIFIED BY 'keycloak';
    GRANT ALL ON keycloak.* TO 'keycloak'@'%';
    CREATE DATABASE IF NOT EXISTS katib;
    CREATE USER IF NOT EXISTS 'katib'@'%' IDENTIFIED BY 'katib';
    GRANT ALL ON katib.* TO 'katib'@'%';
    CREATE DATABASE IF NOT EXISTS mlflow;
    CREATE USER IF NOT EXISTS 'mlflow'@'%' IDENTIFIED BY 'mlflow';
    GRANT ALL ON mlflow.* TO 'mlflow'@'%';
    CREATE USER IF NOT EXISTS 'pipeline'@'%' IDENTIFIED BY 'pipeline';
    CREATE DATABASE IF NOT EXISTS metadb;
    CREATE DATABASE IF NOT EXISTS cachedb;
    CREATE DATABASE IF NOT EXISTS mlpipeline;
    GRANT ALL ON metadb.* TO 'pipeline'@'%';
    GRANT ALL ON cachedb.* TO 'pipeline'@'%';
    GRANT ALL ON mlpipeline.* TO 'pipeline'@'%';
    FLUSH PRIVILEGES;
---

apiVersion: v1
kind: Pod
metadata:
  name: mysql-client
spec:
  containers:
    - name: mysql
      image: mysql:8.0.41
      command: ["/bin/sh", "-c"]
      args: 
        - |
          echo "Creating DB if not exists..." &&
          mysql -u "$MYSQL_USER" < /scripts/init.sql
      envFrom:
        - secretRef:
            name: mysql-secret
      volumeMounts:
        - name: init-sql
          mountPath: /scripts
          readOnly: true
  volumes:
    - name: init-sql
      configMap:
        name: mysql-initdb-script
        items:
          - key: init.sql
            path: init.sql
